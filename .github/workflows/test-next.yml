name: "[CI] Test Next"

on:
    push: # Only run on merges into main that modify files under pyscriptjs/ and examples/
        branches:
            - next
        paths:
            - pyscript.core/**
            - pyscriptjs/**
            - examples/**
            - .github/workflows/test-next.yml # Test that workflow works when changed

    pull_request: # Run on any PR that modifies files under pyscriptjs/ and examples/
        branches:
            - next
        paths:
            - pyscript.core/**
            - pyscriptjs/**
            - examples/**
            - .github/workflows/test-next.yml # Test that workflow works when changed
    workflow_dispatch:

jobs:
    BuildAndTest:
        runs-on: ubuntu-latest-8core
        defaults:
            run:
                working-directory: pyscriptjs
        env:
            MINICONDA_PYTHON_VERSION: py38
            MINICONDA_VERSION: 4.11.0
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                ref: next

            - name: Install node
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: setup Miniconda
              uses: conda-incubator/setup-miniconda@v2

            - name: Setup Environment
              run: make setup

            - name: Build
              run: make build

            - name: TypeScript Tests (core)
              run: make test-ts

            - name: Python Tests
              run: make test-py

            - name: install next deps
              working-directory: pyscript.core
              run: npm i

            - name: Run next tests
              run: make test

            - name: Integration Tests
              run: make test-integration-parallel

            - name: Examples Tests
              run: make test-examples

            - uses: actions/upload-artifact@v3
              with:
                  name: pyscript
                  path: |
                      pyscriptjs/build/
                  if-no-files-found: error
                  retention-days: 7

            - uses: actions/upload-artifact@v3
              if: success() || failure()
              with:
                  name: test_results
                  path: pyscriptjs/test_results
                  if-no-files-found: error
    eslint:
        runs-on: ubuntu-latest-8core
        defaults:
            run:
                working-directory: pyscriptjs
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                ref: next

            - name: Install node
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x

            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: npm install
              run: npm install

            - name: Eslint
              run: npx eslint src -c .eslintrc.js
